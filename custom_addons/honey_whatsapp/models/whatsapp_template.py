# -*- coding: utf-8 -*-

from odoo import models, fields, api, _


class WhatsAppTemplate(models.Model):
    _name = 'honey.whatsapp.template'
    _description = 'WhatsApp Message Templates'

    name = fields.Char(
        string='Template Name',
        required=True
    )
    template_type = fields.Selection([
        ('order_confirmation', 'Order Confirmation'),
        ('shipment_ready', 'Shipment Ready'),
        ('shipment_sent', 'Shipment Sent'),
        ('payment_reminder', 'Payment Reminder'),
        ('custom', 'Custom'),
    ], string='Template Type', required=True)
    
    template_text = fields.Text(
        string='Template Text',
        required=True,
        help='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {partner_name}, {order_number}, {shipment_number}, {date}'
    )
    
    is_active = fields.Boolean(
        string='Active',
        default=True
    )
    
    # –ü—Ä–∏–º–µ—Ä—ã —à–∞–±–ª–æ–Ω–æ–≤
    order_confirmation_template = fields.Text(
        string='Order Confirmation Template',
        default='''
üçØ *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞*

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {partner_name}!

–í–∞—à –∑–∞–∫–∞–∑ #{order_number} –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.

–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {date}
–°—É–º–º–∞: {amount} —Ä—É–±.

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–∏—Ö –º—ë–¥–æ–≤—ã—Ö —Å—Ç–∏–∫–æ–≤! üçØ

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Honey Sticks
        ''',
        help='–®–∞–±–ª–æ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞'
    )
    
    shipment_ready_template = fields.Text(
        string='Shipment Ready Template',
        default='''
üì¶ *–û—Ç–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–∞*

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {partner_name}!

–í–∞—à–∞ –æ—Ç–≥—Ä—É–∑–∫–∞ #{shipment_number} –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.

–î–∞—Ç–∞ –æ—Ç–≥—Ä—É–∑–∫–∏: {date}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫: {boxes_count}

–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä: {tracking_number}

–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! üçØ

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Honey Sticks
        ''',
        help='–®–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç–≥—Ä—É–∑–∫–∏'
    )

    def render_template(self, record):
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–ø–∏—Å–∏"""
        self.ensure_one()
        
        # –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        variables = {
            'partner_name': record.partner_id.name if hasattr(record, 'partner_id') else record.customer_id.name,
            'date': fields.Date.today().strftime('%d.%m.%Y'),
        }
        
        # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–ø–∏—Å–µ–π
        if hasattr(record, 'name'):
            variables['order_number'] = record.name
            variables['shipment_number'] = record.name
            
        if hasattr(record, 'amount_total'):
            variables['amount'] = f"{record.amount_total:,.2f}"
            
        if hasattr(record, 'boxes_count'):
            variables['boxes_count'] = record.boxes_count
            
        if hasattr(record, 'tracking_number'):
            variables['tracking_number'] = record.tracking_number or '–ë—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω'
        
        # –ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ
        rendered_text = self.template_text
        for key, value in variables.items():
            rendered_text = rendered_text.replace(f'{{{key}}}', str(value))
            
        return rendered_text

    @api.model
    def get_template_by_type(self, template_type):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –ø–æ —Ç–∏–ø—É"""
        return self.search([
            ('template_type', '=', template_type),
            ('is_active', '=', True)
        ], limit=1)
